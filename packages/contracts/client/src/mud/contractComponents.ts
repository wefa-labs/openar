/* Autogenerated file. Do not edit manually. */

import { TableId } from "@latticexyz/utils";
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    Balance: (() => {
      const tableId = new TableId("", "Balance");
      return defineComponent(
        world,
        {
          amount: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Owner: (() => {
      const tableId = new TableId("", "Owner");
      return defineComponent(
        world,
        {
          owner: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Role: (() => {
      const tableId = new TableId("", "Role");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Match: (() => {
      const tableId = new TableId("", "Match");
      return defineComponent(
        world,
        {
          board: RecsType.NumberArray,
          players: RecsType.StringArray,
          winner: RecsType.String,
          trophyClaimed: RecsType.Boolean,
          currentPlayer: RecsType.String,
          turnCount: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Identity: (() => {
      const tableId = new TableId("", "Identity");
      return defineComponent(
        world,
        {
          name: RecsType.String,
          createdAt: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    PlayerID: (() => {
      const tableId = new TableId("", "PlayerID");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Counter: (() => {
      const tableId = new TableId("", "Counter");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
  };
}
