/* Autogenerated file. Do not edit manually. */

import { TableId } from "@latticexyz/utils";
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    State: (() => {
      const tableId = new TableId("", "State");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Size: (() => {
      const tableId = new TableId("", "Size");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Element: (() => {
      const tableId = new TableId("", "Element");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Owner: (() => {
      const tableId = new TableId("", "Owner");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Role: (() => {
      const tableId = new TableId("", "Role");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Asset: (() => {
      const tableId = new TableId("", "Asset");
      return defineComponent(
        world,
        {
          image: RecsType.String,
          model: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Care: (() => {
      const tableId = new TableId("", "Care");
      return defineComponent(
        world,
        {
          growthLevel: RecsType.Number,
          checkedAt: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Identity: (() => {
      const tableId = new TableId("", "Identity");
      return defineComponent(
        world,
        {
          name: RecsType.String,
          description: RecsType.String,
          image: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Match: (() => {
      const tableId = new TableId("", "Match");
      return defineComponent(
        world,
        {
          turnCount: RecsType.Number,
          currentPlayer: RecsType.String,
          winner: RecsType.String,
          players: RecsType.StringArray,
          board: RecsType.NumberArray,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Game: (() => {
      const tableId = new TableId("", "Game");
      return defineComponent(
        world,
        {
          matchesPlayed: RecsType.Number,
          worldId: RecsType.String,
          spaceId: RecsType.String,
          winner: RecsType.String,
          players: RecsType.StringArray,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Cell: (() => {
      const tableId = new TableId("", "Cell");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Space: (() => {
      const tableId = new TableId("", "Space");
      return defineComponent(
        world,
        {
          id: RecsType.String,
          position: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    ARWorld: (() => {
      const tableId = new TableId("", "ARWorld");
      return defineComponent(
        world,
        {
          id: RecsType.String,
          spaceCount: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Counter: (() => {
      const tableId = new TableId("", "Counter");
      return defineComponent(
        world,
        {
          value: RecsType.Number,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
  };
}
